// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Franciza {
  franciza_id   Int    @id @unique @default(autoincrement())
  numeDetinator String
  tara          String
  nrAngajati    Int

  magazin Magazin[]
}

model Magazin {
  magazin_id      Int      @id @unique @default(autoincrement())
  locatie         String
  program         String
  dataDeschiderii DateTime

  franciza_id Int
  franciza    Franciza  @relation(fields: [franciza_id], references: [franciza_id])
  angajat     Angajat[]
  raion       Raion[]
}

model Produs {
  produs_id Int    @id @unique @default(autoincrement())
  nume      String
  pret      Int

  oferta_id     Int?
  raion_id      Int
  oferta        Oferta?         @relation(fields: [oferta_id], references: [oferta_id])
  raion         Raion           @relation(fields: [raion_id], references: [raion_id])
  istoricOferta IstoricOferta[]
}

model Oferta {
  oferta_id       Int    @id @unique @default(autoincrement())
  nume            String
  procentajScazut Int
  durata          String

  produs        Produs[]
  raion         Raion[]
  istoricOferta IstoricOferta[]
}

model Raion {
  raion_id Int    @id @unique @default(autoincrement())
  nume     String

  magazin_id    Int
  oferta_id     Int?
  magazin       Magazin         @relation(fields: [magazin_id], references: [magazin_id])
  oferta        Oferta?         @relation(fields: [oferta_id], references: [oferta_id])
  produse       Produs[]
  istoricOferta IstoricOferta[]
}

model Angajat {
  angajat_id    Int      @id @unique @default(autoincrement())
  nume          String
  prenume       String
  dataAngajarii DateTime
  eligibilPrima Boolean

  post_id     Int
  magazin     Magazin[]
  post        Post          @relation(fields: [post_id], references: [post_id])
  istoricPost IstoricPost[]
}

model Post {
  post_id      Int    @id @unique @default(autoincrement())
  nume         String
  salariuBrut  Int
  valoarePrima Int

  angajat     Angajat[]
  istoricPost IstoricPost[]
}

model IstoricPost {
  angajat_id  Int
  dataInceput DateTime
  dataFinal   DateTime

  post_id Int
  post    Post    @relation(fields: [post_id], references: [post_id])
  angajat Angajat @relation(fields: [angajat_id], references: [angajat_id])

  @@id([angajat_id, dataInceput])
}

model IstoricOferta {
  oferta_id   Int
  dataInceput DateTime
  dataFinal   DateTime

  raion_id  Int?
  produs_id Int?
  oferta    Oferta  @relation(fields: [oferta_id], references: [oferta_id])
  raion     Raion?  @relation(fields: [raion_id], references: [raion_id])
  produs    Produs? @relation(fields: [produs_id], references: [produs_id])

  @@id([oferta_id, dataInceput])
}
